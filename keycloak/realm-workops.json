{
  "realm": "workops",
  "enabled": true,
  "registrationAllowed": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "rememberMe": true,
  "verifyEmail": false,
  "sslRequired": "none",
  "internationalizationEnabled": false,
  "roles": {
    "realm": [
      { "name": "admin", "description": "Administrator role" },
      { "name": "user", "description": "Standard user role" }
    ]
  },
  "clients": [
    {
      "clientId": "workops-spa",
      "name": "WorkOps SPA",
      "rootUrl": "http://localhost:5173",
      "baseUrl": "/",
      "enabled": true,
      "protocol": "openid-connect",
      "publicClient": true,
      "standardFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "implicitFlowEnabled": false,
      "serviceAccountsEnabled": false,
      "redirectUris": ["http://localhost:5173/*","http://localhost:8085/swagger/oauth2-redirect.html"],
      "webOrigins": ["http://localhost:5173","http://localhost:8085"],
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false"
      },
      "defaultClientScopes": ["web-origins", "roles", "profile", "email"],
      "protocolMappers": [
      {
        "name": "audience-workops-api",
        "protocol": "openid-connect",
        "protocolMapper": "oidc-audience-mapper",
        "consentRequired": false,
        "config": {
          "included.client.audience": "workops-api",
          "access.token.claim": "true",
          "id.token.claim": "false"
        }
      }
    ]
    },
    {
      "clientId": "workops-api",
      "name": "WorkOps API",
      "enabled": true,
      "protocol": "openid-connect",
      "bearerOnly": true,
      "publicClient": false,
      "serviceAccountsEnabled": true,
      "directAccessGrantsEnabled": true,
      "standardFlowEnabled": false,
      "authorizationServicesEnabled": false,
      "fullScopeAllowed": false,
      "attributes": {
        "oauth2.device.authorization.grant.enabled": "false"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "claim.name": "roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "workops-api",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "preferred_username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "claim.name": "preferred_username",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": ["roles", "profile", "email"]
    }
  ],
  "users": [
    {
      "username": "admin1",
      "email": "admin1@example.com",
      "firstName": "Admin",
      "lastName": "One",
      "enabled": true,
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "Passw0rd!", "temporary": false }],
      "realmRoles": ["admin"]
    },
    {
      "username": "admin2",
      "email": "admin2@example.com",
      "firstName": "Admin",
      "lastName": "Two",
      "enabled": true,
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "Passw0rd!", "temporary": false }],
      "realmRoles": ["admin"]
    },
    {
      "username": "user1",
      "email": "user1@example.com",
      "firstName": "User",
      "lastName": "One",
      "enabled": true,
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "Passw0rd!", "temporary": false }],
      "realmRoles": ["user"]
    },
    {
      "username": "user2",
      "email": "user2@example.com",
      "firstName": "User",
      "lastName": "Two",
      "enabled": true,
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "Passw0rd!", "temporary": false }],
      "realmRoles": ["user"]
    }
  ],
  "identityProviders": [
    {
      "alias": "google",
      "displayName": "Google",
      "providerId": "google",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "clientId": "GOOGLE_CLIENT_ID",
        "clientSecret": "GOOGLE_CLIENT_SECRET",
        "defaultScope": "openid profile email",
        "prompt": "consent",
        "hostedDomain": "",
        "uiLocales": "",
        "loginHint": "",
        "useJwksUrl": "true",
        "disableUserInfo": "false",
        "syncMode": "IMPORT",
        "forwardParameters": ""
      }
    }
  ],
  "identityProviderMappers": [
    {
      "name": "google-email",
      "identityProviderAlias": "google",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "email",
        "user.attribute": "email"
      }
    },
    {
      "name": "google-username",
      "identityProviderAlias": "google",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "preferred_username",
        "user.attribute": "username"
      }
    },
    {
      "name": "google-given_name",
      "identityProviderAlias": "google",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "given_name",
        "user.attribute": "firstName"
      }
    },
    {
      "name": "google-family_name",
      "identityProviderAlias": "google",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "family_name",
        "user.attribute": "lastName"
      }
    }
  ],
  "smtpServer": {},
  "browserFlow": "browser",
  "directGrantFlow": "direct grant"
}
